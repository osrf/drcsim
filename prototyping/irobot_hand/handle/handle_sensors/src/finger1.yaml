#Calibration for the sensors on the HANDLE hand
#
# NOTE: In general, the order of the arrays is: [F0, F1, F2, F2 Ant., Spread].
# Where: F0 is analogous to your right index finger, F1 is analogous to your 
# middle finger, F2 is analogous to your thumb, F2 Ant. is the antagonistic 
# motor for F2, and Spread is the motor which controls the rotation of F0 and
# F1.

# Note there are 12 proximal and 10 distal sensors.
#Finger[3] fingerTactile
# calibration consists of a zero offset for each sensor
# these return unitless values
Tactile:
    proximal : [700,700,700,700,700,700,700,700,700,700,700,700]
    distal   : [700,700,700,700,700,700,700,700,700,700]

# The proximal joint angle.  Approx 2.84 ticks per degree.
# int32[3] proximalJointAngle
# zero is in degrees - to make it easier to adjust
# zero visually angle from horisontal plane
# tics_per_radian : 162.815507

proximalJointAngle:
    tics_per_degree : 2.84
    zero            : 35

# The finger distal joint flexture angle
# Note there are 4 readings on either side of the joint, for a total of 8
# each pair of readings is converted to a ratio of difference to sum to reduce sensitivity to intensity
# Finger[3] distalJointAngle
#
# the raw readings are converted to flex and twist as follows:
# 
# ratio[0]:a0 * (sensor[0] - sensor[1]) / (sensor[0] + sensor[1]) + b0
# ...
# flex[0]:flex0 * (ratio[0] + ratio[1])    # hopefully we can remove this since it should theoretically be consistent across fingers
# twist[0]:twist0 * (ratio[0] - ratio[1])
distalJointAngle:
    # 0 : {'a': -1.6219162187086806, 'ktwist': -0.5, 'b': -0.68681806335347217, 'kflex': 0.5}
    # 1 : {'a': 1.5660077957271887, 'ktwist': -0.5, 'b': 0.062863316369315608, 'kflex': 0.5}
    # 2 : {'a': -1.8183405266428871, 'ktwist': -0.5, 'b': -0.72790490903671556, 'kflex': 0.5}
    # 3 : {'a': 2.1218147303350179, 'ktwist': -0.5, 'b': -0.37288015827260851, 'kflex': 0.5}

    0 : {'a': 2.0172558338655806, 'ktwist': 0.5, 'b': -1.0192713964295834, 'kflex': 0.5}
    1 : {'a': -1.0704765147449, 'ktwist': 0.5, 'b': 0.56738211479882683, 'kflex': 0.5}
    2 : {'a': 1.7395195253080549, 'ktwist': 0.5, 'b': -0.345633621887437814, 'kflex': 0.5}
    3 : {'a': -1.5629395764451575, 'ktwist': 0.5, 'b': -0.41060311650733966, 'kflex': 0.5}

#    0 : {'a': -2.496989810253007, 'ktwist': -0.5, 'b': -1.2090103402494683, 'kflex': 0.5}
#    1 : {'a': 1.8056348164599891, 'ktwist': -0.5, 'b': 0.038760552106428918, 'kflex': 0.5}
#    2 : {'a': -2.2919276068856727, 'ktwist': -0.5, 'b': -0.9888392109642139, 'kflex': 0.5}
#    3 : {'a': 2.3742343143118254, 'ktwist': -0.5, 'b': -0.41051837231828525, 'kflex': 0.5}

# broken ifnger-
#    0: {'a': 3.5350174318317, 'b': 1.302173736838588, kflex : 0.5, ktwist: 0.5}
#    1: {'a': -0.870797663706993, 'b': 0.39503454314822944, kflex : 0.5, ktwist: 0.5}
#    2: {'a': 1.2633003182520763, 'b': 0.2381526452640775, kflex : 0.5, ktwist: 0.5}
#    3: {'a': -1.3115120987403779, 'b': -0.1510215412546539, kflex : 0.5, ktwist: 0.5}

fingerPVDF:
# The dynamic PVDF sensors in each finger.
# Note there are 3 sensors on each finger link <- modified, now 1 sensor
# Finger[3] fingerPVDF
#
# not needed at moment, here as placeholder

fingerAcceleration:
# The accelerometer in the distal link.  units?  axes?
# geometry_msgs/Vector3[3] fingerAcceleration
#
# scale is factory calibrated, here as placeholder in case axis calibration required
