<robot name="multisense_sl">
<!-- from atlas_v4
    <link name="head">
        <inertial>
            <mass value="3.751" />
            <origin xyz="-0.0481 0 0.0457" rpy="0 -0 0" />
            <inertia ixx="0.0108" ixy="-0.0001" ixz="-0.0007" iyy="0.0182" iyz="-0.0003" izz="0.0108" />
        </inertial>
        <visual>
            <origin xyz="0 0 0" rpy="0 -0 0" />
            <geometry>
                <mesh filename="package://atlas/meshes_v3/head.DAE" scale="1 1 1" />
            </geometry>
        </visual>
        <collision>
            <origin xyz="0 0 0" rpy="0 -0 0" />
            <geometry>
                <mesh filename="package://atlas/meshes_v3/head.DAE" scale="1 1 1" />
            </geometry>
        </collision>
    </link>
-->
  <!-- Head Link Simple Collision Meshes -->
  <link name="head">
    <inertial>
      <origin xyz="-0.075493 3.3383E-05 0.02774" rpy="0 0 0" />
      <mass value="1.41984" />
      <inertia iyy="0.0041178" ixy="-1.5797E-06" iyz="-6.8415E-07" ixx="0.0039688" ixz="-0.00089293" izz="0.0035243" />
    </inertial>
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <mesh filename="package://multisense_sl_description/meshes/head.dae" />
      </geometry>
      <material name="">
        <color rgba="0.9098 0.44314 0.031373 1" />
      </material>
    </visual>
  <collision>
    <origin xyz="-0.0503 0 -0.00195" rpy="0 0 0" />
    <geometry>
      <box size="0.1311 0.12 0.0591"/>
    </geometry>
  </collision>
  <collision>
    <origin xyz="-0.093 0 0.0868" rpy="0 0 0" />
    <geometry>
      <box size="0.0468 0.12 0.1184"/>
    </geometry>
  </collision>
  </link>
  <link name="hokuyo_link">
    <inertial>
      <origin xyz="0.032428 0.0004084 -0.0041835" rpy="0 0 0" />
      <mass value="0.057654" />
      <inertia iyy="4.2412E-05" ixy="4.9927E-08" iyz="-9.8165E-09" ixx="3.7174E-05" ixz="1.1015E-05" izz="4.167E-05" />
    </inertial>
    <visual>
      <!--origin xyz="0.065774 -0.001163 -0.08809" rpy="0 0 0" /-->
      <!--origin xyz="0.045 -0.001163 -0.08809" rpy="-0.314 0 0" /-->
      <origin xyz="0.045 -0.0261018277 -0.08342369" rpy="-0.314 0 0" />
      <geometry>
        <mesh filename="package://multisense_sl_description/meshes/head_camera.dae" />
      </geometry>
      <material name="">
        <color rgba="0.72941 0.35686 0.023529 1" />
      </material>
    </visual>
  <collision>
    <origin xyz="0.01885 0 -0.02119" rpy="0 0 0" />
    <geometry>
      <box size="0.08 0.06 0.04238"/>
    </geometry>
  </collision>
  <collision>
    <origin xyz="0.03 0 0.0235" rpy="0 0 0" />
    <geometry>
      <cylinder radius="0.024425" length="0.047"/>
    </geometry>
  </collision>
  </link>
  <gazebo reference="head">
    <mu1>0.9</mu1>
    <mu2>0.9</mu2>
  </gazebo>
  <gazebo reference="hokuyo_link">
    <mu1>0.9</mu1>
    <mu2>0.9</mu2>
  </gazebo>

  <!-- Head Link Complex Collision Meshes
  <link name="head">
    <inertial>
      <origin xyz="-0.075493 3.3383E-05 0.02774" rpy="0 0 0" />
      <mass value="1.4199" />
      <inertia iyy="0.0041178" ixy="-1.5797E-06" iyz="-6.8415E-07" ixx="0.0039688" ixz="-0.00089293" izz="0.0035243" />
    </inertial>
    <visual>
      <origin xyz="-0.0446 0 0.0880" rpy="0 0 1.570795" />
      <geometry>
        <mesh filename="package://multisense_sl_description/meshes/base_link.STL" />
      </geometry>
      <material name="">
        <color rgba="0.9098 0.44314 0.031373 1" />
      </material>
    </visual>
    <collision>
      <origin xyz="-0.0446 0 0.0880" rpy="0 0 1.570795" />
      <geometry>
        <mesh filename="package://multisense_sl_description/meshes/base_link.STL" />
      </geometry>
    </collision>
  </link>
  <link name="hokuyo_link">
    <inertial>
      <origin xyz="0.012428 0.0004084 -0.0041835" rpy="0 0 0" />
      <mass value="0.057664" />
      <inertia iyy="4.2412E-05" ixy="4.9927E-08" iyz="-9.8165E-09" ixx="3.7174E-05" ixz="1.1015E-05" izz="4.167E-05" />
    </inertial>
    <visual>
      <origin xyz="0 0 0" rpy="1.5707963267949 0 1.5707963267949" />
      <geometry>
        <mesh filename="package://multisense_sl_description/meshes/hokuyo_link.STL" />
      </geometry>
      <material name="">
        <color rgba="0.72941 0.35686 0.023529 1" />
      </material>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="1.5707963267949 0 1.5707963267949" />
      <geometry>
        <mesh filename="package://multisense_sl_description/meshes/hokuyo_link.STL" />
      </geometry>
    </collision>
  </link>
  -->

  <joint name="hokuyo_joint" type="continuous">
    <origin xyz="-0.0446 0 0.0880" rpy="0 0 0" />
    <parent link="head" />
    <child link="hokuyo_link" />
    <axis xyz="1 0 0" />
    <dynamics damping="0.01" friction="0"/>
  </joint>
  <gazebo reference="hokuyo_joint">
    <implicitSpringDamper>1</implicitSpringDamper>
  </gazebo>

  <!-- Hokuyo Laser -->
  <joint name="head_hokuyo_joint" type="fixed">
    <axis xyz="0 1 0" />
    <origin xyz="0.03 0 0.015" rpy="0 0 0"/>
    <parent link="hokuyo_link"/>
    <child link="head_hokuyo_frame"/>
  </joint>
  <link name="head_hokuyo_frame">
    <inertial>
      <mass value="1e-5" />
      <!-- collocate with parent link and remove mass from it -->
      <origin xyz="0.042428 0.0004084 0.0108165" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link>
  <gazebo reference="head_hokuyo_frame">
    <sensor type="gpu_ray" name="head_hokuyo_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>1081</samples>
            <resolution>1</resolution>
            <min_angle>-2.356194</min_angle>
            <max_angle>2.356194</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_gpu_laser.so">
        <topicName>/multisense/lidar_scan</topicName>
        <frameName>head_hokuyo_frame</frameName>
      </plugin>
    </sensor>
  </gazebo>
  <!-- Stereo Camera -->
  <joint name="left_camera_frame_joint" type="fixed">
    <!-- optical frame collocated with tilting DOF -->
    <origin xyz="0.0 0.035 -0.002"/>
    <parent link="head"/>
    <child link="left_camera_frame"/>
  </joint>
  <link name="left_camera_frame">
    <inertial>
      <mass value="1e-5" />
      <!-- collocate with parent link and remove mass from it -->
      <origin xyz="-0.075493 0.035033383 0.02574"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link>
  <joint name="left_camera_optical_frame_joint" type="fixed">
    <origin xyz="0 0 0" rpy="-1.5708 0.0 -1.5708" />
    <parent link="left_camera_frame" />
    <child link="left_camera_optical_frame"/>
  </joint>
  <link name="left_camera_optical_frame"/>
  <gazebo reference="left_camera_frame">
    <sensor type="multicamera" name="stereo_camera">
      <!-- see MultiSenseSLPlugin.h for available modes -->
      <update_rate>10.0</update_rate>
      <camera name="left">
        <!-- Spec sheet says 80deg X 45deg @ 1024x544pix.  Based on feedback
             from teams, we're instead doing 80deg X 80deg @ 800x800pix. -->
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>1024</width>
          <height>544</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.  
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1].
               The stddev value of 0.007 is based on experimental data 
               from a camera in a Sandia hand pointed at a static scene
               in a couple of different lighting conditions.  -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <camera name="right">
        <pose>0 -0.07 0 0 0 0</pose>
        <!-- Spec sheet says 80deg X 45deg @ 1024x544pix. -->
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>1024</width>
          <height>544</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.  
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1].
               The stddev value of 0.007 is based on experimental data 
               from a camera in a Sandia hand pointed at a static scene
               in a couple of different lighting conditions.  -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="stereo_camera_controller" filename="libgazebo_ros_multicamera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>multisense/camera</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>left_camera_optical_frame</frameName>
        <!--<rightFrameName>right_camera_optical_frame</rightFrameName>-->
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>


  <joint name="right_camera_frame_joint" type="fixed">
    <origin xyz="0.0 -0.035 -0.002"/>
    <parent link="head"/>
    <child link="right_camera_frame"/>
  </joint>
  <link name="right_camera_frame">
    <inertial>
      <mass value="1e-5" />
      <!-- collocate with parent link and remove mass from it -->
      <origin xyz="-0.075493 -0.034966617 0.02574"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link>
  <joint name="right_camera_optical_frame_joint" type="fixed">
    <origin xyz="0 0 0" rpy="-1.5708 0.0 -1.5708" />
    <parent link="right_camera_frame" />
    <child link="right_camera_optical_frame"/>
  </joint>
  <link name="right_camera_optical_frame"/>

  <joint name="center_top_led_frame_joint" type="fixed">
    <origin xyz="0.01125 0.0 0.0105"/>
    <parent link="head"/>
    <child link="center_top_led_frame"/>
  </joint>
  <link name="center_top_led_frame">
    <inertial>
      <mass value="1e-5" />
      <!-- collocate with parent link and remove mass from it -->
      <origin xyz="-0.064243 0.000033383 0.03824" rpy="0 0 0" />
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link>
  <joint name="center_bottom_led_frame_joint" type="fixed">
    <origin xyz="0.01125 0.0 -0.0155"/>
    <parent link="head"/>
    <child link="center_bottom_led_frame"/>
  </joint>
  <link name="center_bottom_led_frame">
    <inertial>
      <mass value="1e-5" />
      <!-- collocate with parent link and remove mass from it -->
      <origin xyz="-0.064243 0.000033383 0.01224" rpy="0 0 0" />
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link>
  <joint name="left_led_frame_joint" type="fixed">
    <origin xyz="-0.01443 0.07452 0.050346" rpy="0 -0.15 0.53"/>
    <parent link="head"/>
    <child link="left_led_frame"/>
  </joint>
  <link name="left_led_frame">
    <inertial>
      <mass value="1e-5" />
      <!-- collocate with parent link and remove mass from it -->
      <origin xyz="-0.089923 0.074553383 0.078086" rpy="0 -0.15 0.53" />
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link>
  <joint name="right_led_frame_joint" type="fixed">
    <origin xyz="-0.01443 -0.07452 0.050346" rpy="0 -0.15 -0.53"/>
    <parent link="head"/>
    <child link="right_led_frame"/>
  </joint>
  <link name="right_led_frame">
    <inertial>
      <mass value="1e-5" />
      <!-- collocate with parent link and remove mass from it -->
      <origin xyz="-0.089923 -0.074486617 0.07908" rpy="0 -0.15 -0.53" />
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link>

  <gazebo>
    <plugin filename="libMultiSenseSLPlugin.so" name="multisense_plugin"/>
  </gazebo>

  <!-- imu link -->
  <link name="head_imu_link">
    <inertial>
      <mass value="1e-5" />
      <!-- collocate with parent link and remove mass from it -->
      <origin xyz="-0.122993 0.035033383 0.02774" rpy="0 0 0" />
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.01 0.01 0.01"/>
      </geometry>
    </visual>
  </link>
  <joint name="head_imu_joint" type="fixed">
    <parent link="head"/>
    <child link="head_imu_link"/>
    <!-- putting it at the same z-level as the stereo -->
    <origin xyz="-0.0475 0.035 0.0" rpy="0 0 0"/>
  </joint>
  <gazebo reference="head_imu_link">
    <!-- this is expected to be reparented to head with appropriate offset
         when head_imu_link is reduced by fixed joint reduction -->
    <!-- todo: this is working with gazebo 1.4, need to write a unit test -->
    <sensor name="head_imu_sensor" type="imu">
      <always_on>1</always_on>
      <update_rate>1000.0</update_rate>
      <imu>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters from Boston Dynamics
               (http://gazebosim.org/wiki/Sensor_noise):
                 rates (rad/s): mean=0, stddev=2e-4
                 accels (m/s/s): mean=0, stddev=1.7e-2
                 rate bias (rad/s): 5e-6 - 1e-5
                 accel bias (m/s/s): 1e-1
               Experimentally, simulation provide rates with noise of
               about 1e-3 rad/s and accels with noise of about 1e-1 m/s/s.
               So we don't expect to see the noise unless number of inner iterations
               are increased.

               We will add bias.  In this model, bias is sampled once for rates
               and once for accels at startup; the sign (negative or positive)
               of each bias is then switched with equal probability.  Thereafter,
               the biases are fixed additive offsets.  We choose
               bias means and stddevs to produce biases close to the provided
               data. -->
          <rate>
            <mean>0.0</mean>
            <stddev>2e-4</stddev>
            <bias_mean>0.0000075</bias_mean>
            <bias_stddev>0.0000008</bias_stddev>
          </rate>
          <accel>
            <mean>0.0</mean>
            <stddev>1.7e-2</stddev>
            <bias_mean>0.1</bias_mean>
            <bias_stddev>0.001</bias_stddev>
          </accel>
        </noise>
      </imu>
    </sensor>
  </gazebo>
</robot>
